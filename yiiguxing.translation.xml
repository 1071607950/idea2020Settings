<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="760" />
    <option name="newTranslationDialogY" value="428" />
    <histories>
      <item value="Set the cells type (blank, numeric, boolean, error or string). &lt;p&gt;If the cell currently contains a value, the value will be converted to match the new type, if possible. Formatting is generally lost in the process however.&lt;p&gt; &lt;p&gt;Conversion rules:&lt;p&gt; &lt;p&gt;to NUMERIC: numeric value is left as is. True converts to 1.0, false converts to 0. otherwise, the value is set to 0. Formula is removed.&lt;p&gt; &lt;p&gt;If what you want to do is get a String value for your numeric cell, &lt;i&gt;stop!&lt;i&gt; This is not the way to do it. Instead, for fetching the string value of a numeric or boolean or date cell, use {@link DataFormatter} instead.&lt;p&gt; &lt;p&gt;If cell is a member of an array formula group containing more than 1 cell, an {@link IllegalStateException} is thrown. If the array formula group contains only this cell, it is removed.&lt;p&gt; &lt;p&gt;Passing {@link CellTypeFORMULA} is illegal and will result in an {@link IllegalArgumentException}.&lt;p&gt; @deprecated This method is deprecated and will be removed in POI 5.0. Use explicit {@link setCellFormula(String)}, &lt;code&gt;setCellValue(...)&lt;code&gt; or {@link setBlank()} to get the desired result. @throws IllegalArgumentException if the specified cell type is invalid (null, _NONE or FORMULA) @throws IllegalStateException if the current value cannot be converted to the new type or if the cell is a part of an array formula group containing other cells" />
      <item value="重复" />
      <item value="We consider something to be an AspectJ aspect suitable for use by the Spring AOP system if it has the @Aspect annotation, and was not compiled by ajc. The reason for this latter test is that aspects written in the code-style (AspectJ language) also have the annotation present when compiled by ajc with the -1.5 flag, yet they cannot be consumed by Spring AOP." />
      <item value="Override" />
      <item value="column Visibles" />
      <item value="adorn" />
      <item value="This may indicate that the file is used to inflate memory usage and thus could pose a security risk. You can adjust this limit via ZipSecureFile.setMinInflateRatio() if you need to work with files which exceed this limit. Uncompressed size: 133384, Rawcompressed size: 1318, ratio: 0.009881 Limits: MIN_INFLATE_RATIO: 0.010000, Entry: xlmediaimage3.emf" />
      <item value="Column CREATE_TIME must be either aggregated, or mentioned in GROUP BY clause " />
      <item value="package com.city.shopmybatis.controller; import com.city.shopmybatis.model.AreaModel; import com.city.shopmybatis.model.GoodModel; import com.city.shopmybatis.result.ResultList; import com.city.shopmybatis.result.ResultOne; import com.city.shopmybatis.service.IAreaService; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController; import java.util.List; @RestController @RequestMapping(&quot;area&quot;) public class AreaController { @Autowired private IAreaService iAreaService=null; @RequestMapping(&quot;add&quot;) public ResultOne add(@RequestBody AreaModel am) throws Exception{ ResultOne&lt;String&gt; resultOne=new ResultOne&lt;String&gt;(); if (iAreaService.add(am)&gt;0){ resultOne.setCode(20000); resultOne.setMessage(&quot;添加成功&quot;); }else{ resultOne.setCode(500); resultOne.setMessage(&quot;添加失败&quot;); } return resultOne; } @RequestMapping(&quot;modify&quot;) public ResultOne modify(@RequestBody AreaModel am) throws Exception { ResultOne&lt;String&gt; resultOne=new ResultOne&lt;String&gt;(); if (iAreaService.modify(am)&gt;0){ resultOne.setCode(20000); resultOne.setMessage(&quot;修改成功&quot;); }else{ resultOne.setCode(500); resultOne.setMessage(&quot;修改失败&quot;); } return resultOne; } @RequestMapping(&quot;delete&quot;) public ResultOne delete(@RequestBody AreaModel am) throws Exception { ResultOne&lt;String&gt; resultOne=new ResultOne&lt;String&gt;(); if (iAreaService.getByIdWithGoods(am.getId()).getGoods().isEmpty()==true){ if (iAreaService.delete(am)&gt;0){ resultOne.setCode(20000); resultOne.setMessage(&quot;删除成功&quot;); }else{ resultOne.setCode(500); resultOne.setMessage(&quot;删除失败&quot;); } }else{ resultOne.setCode(500); resultOne.setMessage(&quot;删除失败,请先删除区域下的所有商品&quot;); } return resultOne; } @RequestMapping(&quot;getById&quot;) public ResultOne getById(int id) throws Exception { ResultOne&lt;AreaModel&gt; resultOne = new ResultOne&lt;AreaModel&gt;(); resultOne.setCode(20000); resultOne.setMessage(&quot;获取成功&quot;); resultOne.setData(iAreaService.getByIdWithoutGoods(id)); return resultOne; } @RequestMapping(&quot;getByGoodId&quot;) public ResultList getByGoodId(int id) throws Exception { ResultList&lt;AreaModel&gt; resultList=new ResultList&lt;AreaModel&gt;(); resultList.setCode(20000); resultList.setMessage(&quot;获取成功&quot;); resultList.setData(iAreaService.getByGoodIdWithAreas(id)); return resultList; } @RequestMapping(&quot;getListByAll&quot;) public ResultList getListByAll() throws Exception { ResultList&lt;AreaModel&gt; resultList=new ResultList&lt;AreaModel&gt;(); resultList.setCode(20000); resultList.setData(iAreaService.getListByAll()); resultList.setMessage(&quot;获取成功&quot;); return resultList; } @RequestMapping(&quot;getListByAllWithPage&quot;) public ResultList getListByAllWithPage(@RequestParam(value = &quot;page&quot;,required = false,defaultValue = &quot;1&quot;) int page, @RequestParam(value=&quot;rows&quot;,required = false,defaultValue = &quot;10&quot;) int rows) throws Exception { ResultList&lt;AreaModel&gt; resultList=new ResultList&lt;AreaModel&gt;(); resultList.setRows(rows); resultList.setPage(page); resultList.setCount(iAreaService.getCountByAll()); resultList.setPageCount(iAreaService.getPageCountByAll(rows)); resultList.setCode(20000); resultList.setData(iAreaService.getListByAllWithPage(page,rows)); resultList.setMessage(&quot;获取成功&quot;); return resultList; } }" />
      <item value="add" />
      <item value="Request Mapping" />
      <item value="modify" />
      <item value="result One" />
      <item value="get List By All" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="13" />
        <entry key="ENGLISH" value="15" />
        <entry key="CATALAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1618189298791" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20201224000655122" />
      </app-key>
    </option>
    <option name="phoneticFontFamily" value="Microsoft YaHei UI" />
    <option name="primaryFontFamily" value="Microsoft YaHei UI" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>